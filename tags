!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
ACLOCAL	Makefile	/^ACLOCAL = ${SHELL} \/home\/maben\/Projects\/c\/fcrackzip-1.0\/missing --run aclocal-1.7$/;"	m
ACLOCAL_M4	Makefile	/^ACLOCAL_M4 = $(top_srcdir)\/aclocal.m4$/;"	m
AMDEP_FALSE	Makefile	/^AMDEP_FALSE = #$/;"	m
AMDEP_TRUE	Makefile	/^AMDEP_TRUE = $/;"	m
AMTAR	Makefile	/^AMTAR = ${SHELL} \/home\/maben\/Projects\/c\/fcrackzip-1.0\/missing --run tar$/;"	m
ARCH_i386	crackdef.c	7;"	d	file:
ARCH_i386	crackdef.c	86;"	d	file:
AUTOCONF	Makefile	/^AUTOCONF = ${SHELL} \/home\/maben\/Projects\/c\/fcrackzip-1.0\/missing --run autoconf$/;"	m
AUTOHEADER	Makefile	/^AUTOHEADER = ${SHELL} \/home\/maben\/Projects\/c\/fcrackzip-1.0\/missing --run autoheader$/;"	m
AUTOMAKE	Makefile	/^AUTOMAKE = ${SHELL} \/home\/maben\/Projects\/c\/fcrackzip-1.0\/missing --run automake-1.7$/;"	m
AUTOMAKE_OPTIONS	Makefile	/^AUTOMAKE_OPTIONS = gnits$/;"	m
AWK	Makefile	/^AWK = gawk$/;"	m
BENCHMARK_LOOPS	crack.h	5;"	d
CC	Makefile	/^CC = gcc$/;"	m
CCDEPMODE	Makefile	/^CCDEPMODE = depmode=gcc3$/;"	m
CCLD	Makefile	/^CCLD = $(CC)$/;"	m
CFLAGS	Makefile	/^CFLAGS = -g -O2 -funroll-all-loops -O3$/;"	m
COMPILE	Makefile	/^COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \\$/;"	m
CONFIG_CLEAN_FILES	Makefile	/^CONFIG_CLEAN_FILES =$/;"	m
CONFIG_HEADER	Makefile	/^CONFIG_HEADER = config.h$/;"	m
COPY	cpmask.c	253;"	d	file:
COPY	cpmask.c	287;"	d	file:
CPP	Makefile	/^CPP = gcc -E$/;"	m
CPPFLAGS	Makefile	/^CPPFLAGS = $/;"	m
CP_BPP	cpmask.c	42;"	d	file:
CP_CELL_SIZE	cpmask.c	41;"	d	file:
CP_CODE_MAX_LENGTH	cpmask.c	40;"	d	file:
CRACK_H	crack.h	2;"	d
CRC32_H	crc32.h	2;"	d
CRC_SIZE	crack.h	30;"	d
CTAGS	Makefile	/^CTAGS = ctags$/;"	m
CTAGSFLAGS	Makefile	/^CTAGSFLAGS =$/;"	m
CYGPATH_W	Makefile	/^CYGPATH_W = echo$/;"	m
DEFAULT_INCLUDES	Makefile	/^DEFAULT_INCLUDES =  -I. -I$(srcdir) -I.$/;"	m
DEFAULT_METHOD	crackdef.c	107;"	d	file:
DEFAULT_METHOD	crackdef.c	115;"	d	file:
DEFAULT_METHOD	crackdef.c	18;"	d	file:
DEFAULT_METHOD	crackdef.c	31;"	d	file:
DEFAULT_METHOD	crackdef.c	44;"	d	file:
DEFAULT_METHOD	crackdef.c	57;"	d	file:
DEFAULT_METHOD	crackdef.c	70;"	d	file:
DEFAULT_METHOD	crackdef.c	83;"	d	file:
DEFAULT_METHOD	crackdef.c	96;"	d	file:
DEFS	Makefile	/^DEFS = -DHAVE_CONFIG_H$/;"	m
DEPDIR	Makefile	/^DEPDIR = .deps$/;"	m
DEP_FILES	Makefile	/^DEP_FILES = $(DEPDIR)\/getopt.Po $(DEPDIR)\/getopt1.Po \\$/;"	m
DEVNULL	main.c	29;"	d	file:
DEVNULL	main.c	31;"	d	file:
DISTFILES	Makefile	/^DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)$/;"	m
DIST_COMMON	Makefile	/^DIST_COMMON = README $(noinst_HEADERS) $(srcdir)\/Makefile.in \\$/;"	m
DIST_SOURCES	Makefile	/^DIST_SOURCES = $(fcrackzip_SOURCES) $(zipinfo_SOURCES)$/;"	m
ECHO_C	Makefile	/^ECHO_C = $/;"	m
ECHO_N	Makefile	/^ECHO_N = -n$/;"	m
ECHO_T	Makefile	/^ECHO_T = $/;"	m
EGREP	Makefile	/^EGREP = \/usr\/bin\/grep -E$/;"	m
ETAGS	Makefile	/^ETAGS = etags$/;"	m
ETAGSFLAGS	Makefile	/^ETAGSFLAGS =$/;"	m
EXEEXT	Makefile	/^EXEEXT = $/;"	m
EXTRA_DIST	Makefile	/^EXTRA_DIST = fcrackzip.txt fcrackzip.html fcrackzip.1 gencrack.pl zipcrack.c cpmask.c crackdef.c noradi.zip$/;"	m
FALSE	main.c	/^typedef enum { FALSE = 0, TRUE = 1 } bool;$/;"	e	enum:__anon4	file:
FALSE	zipinfo.c	/^typedef enum { FALSE = 0, TRUE = 1 } bool;$/;"	e	enum:__anon5	file:
FILE_SIZE	crack.h	29;"	d
GREP	Makefile	/^GREP = \/usr\/bin\/grep$/;"	m
GZIP_ENV	Makefile	/^GZIP_ENV = --best$/;"	m
HAVE_GETOPT_H	config.h	8;"	d
HAVE_GETOPT_LONG	config.h	11;"	d
HAVE_GETTIMEOFDAY	config.h	14;"	d
HAVE_INTTYPES_H	config.h	17;"	d
HAVE_MEMORY_H	config.h	20;"	d
HAVE_PERL_FALSE	Makefile	/^HAVE_PERL_FALSE = #$/;"	m
HAVE_PERL_TRUE	Makefile	/^HAVE_PERL_TRUE = $/;"	m
HAVE_STDBOOL_H	config.h	23;"	d
HAVE_STDINT_H	config.h	26;"	d
HAVE_STDLIB_H	config.h	29;"	d
HAVE_STRINGS_H	config.h	32;"	d
HAVE_STRING_H	config.h	35;"	d
HAVE_SYS_STAT_H	config.h	38;"	d
HAVE_SYS_TIME_H	config.h	41;"	d
HAVE_SYS_TYPES_H	config.h	44;"	d
HAVE_UNISTD_H	config.h	47;"	d
HEADERS	Makefile	/^HEADERS = $(noinst_HEADERS)$/;"	m
HEADER_SIZE	crack.h	31;"	d
INSTALL	Makefile	/^INSTALL = \/usr\/bin\/install -c$/;"	m
INSTALL_DATA	Makefile	/^INSTALL_DATA = ${INSTALL} -m 644$/;"	m
INSTALL_HEADER	Makefile	/^INSTALL_HEADER = $(INSTALL_DATA)$/;"	m
INSTALL_PROGRAM	Makefile	/^INSTALL_PROGRAM = ${INSTALL}$/;"	m
INSTALL_SCRIPT	Makefile	/^INSTALL_SCRIPT = ${INSTALL}$/;"	m
INSTALL_STRIP_PROGRAM	Makefile	/^INSTALL_STRIP_PROGRAM = ${SHELL} $(install_sh) -c -s$/;"	m
LDFLAGS	Makefile	/^LDFLAGS = $/;"	m
LIBOBJS	Makefile	/^LIBOBJS = $/;"	m
LIBS	Makefile	/^LIBS = $/;"	m
LINK	Makefile	/^LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@$/;"	m
LTLIBOBJS	Makefile	/^LTLIBOBJS = $/;"	m
MAKEINFO	Makefile	/^MAKEINFO = ${SHELL} \/home\/maben\/Projects\/c\/fcrackzip-1.0\/missing --run makeinfo$/;"	m
MANS	Makefile	/^MANS = $(man_MANS)$/;"	m
MAX_CP_WIDTH	cpmask.c	49;"	d	file:
MAX_FILES	crack.h	33;"	d
MAX_PW	crack.h	4;"	d
MAX_SIZE	cpmask.c	47;"	d	file:
METHOD	crackdef.c	100;"	d	file:
METHOD	crackdef.c	21;"	d	file:
METHOD	crackdef.c	22;"	d	file:
METHOD	crackdef.c	34;"	d	file:
METHOD	crackdef.c	35;"	d	file:
METHOD	crackdef.c	47;"	d	file:
METHOD	crackdef.c	48;"	d	file:
METHOD	crackdef.c	60;"	d	file:
METHOD	crackdef.c	61;"	d	file:
METHOD	crackdef.c	73;"	d	file:
METHOD	crackdef.c	74;"	d	file:
METHOD	crackdef.c	88;"	d	file:
METHOD	crackdef.c	89;"	d	file:
METHOD	crackdef.c	8;"	d	file:
METHOD	crackdef.c	99;"	d	file:
METHOD	crackdef.c	9;"	d	file:
NONOPTION_P	getopt.c	435;"	d	file:
NORMAL_INSTALL	Makefile	/^NORMAL_INSTALL = :$/;"	m
NORMAL_UNINSTALL	Makefile	/^NORMAL_UNINSTALL = :$/;"	m
NROFF	Makefile	/^NROFF = nroff$/;"	m
NULL	getopt1.c	59;"	d	file:
OBJEXT	Makefile	/^OBJEXT = o$/;"	m
OFFSET_X	cpmask.c	43;"	d	file:
OFFSET_Y	cpmask.c	44;"	d	file:
P	cpmask.c	352;"	d	file:
P	cpmask.c	376;"	d	file:
PACKAGE	Makefile	/^PACKAGE = fcrackzip$/;"	m
PACKAGE	config.h	50;"	d
PACKAGE_BUGREPORT	Makefile	/^PACKAGE_BUGREPORT = $/;"	m
PACKAGE_BUGREPORT	config.h	53;"	d
PACKAGE_NAME	Makefile	/^PACKAGE_NAME = $/;"	m
PACKAGE_NAME	config.h	56;"	d
PACKAGE_STRING	Makefile	/^PACKAGE_STRING = $/;"	m
PACKAGE_STRING	config.h	59;"	d
PACKAGE_TARNAME	Makefile	/^PACKAGE_TARNAME = $/;"	m
PACKAGE_TARNAME	config.h	62;"	d
PACKAGE_VERSION	Makefile	/^PACKAGE_VERSION = $/;"	m
PACKAGE_VERSION	config.h	65;"	d
PATH_SEPARATOR	Makefile	/^PATH_SEPARATOR = :$/;"	m
PERL	Makefile	/^PERL = perl$/;"	m
PERMUTE	getopt.c	/^  REQUIRE_ORDER, PERMUTE, RETURN_IN_ORDER$/;"	e	enum:__anon3	file:
POST_INSTALL	Makefile	/^POST_INSTALL = :$/;"	m
POST_UNINSTALL	Makefile	/^POST_UNINSTALL = :$/;"	m
PRE_INSTALL	Makefile	/^PRE_INSTALL = :$/;"	m
PRE_UNINSTALL	Makefile	/^PRE_UNINSTALL = :$/;"	m
PROGRAMS	Makefile	/^PROGRAMS = $(bin_PROGRAMS)$/;"	m
REDIR	main.c	56;"	d	file:
REGPARAM	config.h	117;"	d
REGPARAM	config.h	119;"	d
REQUIRE_ORDER	getopt.c	/^  REQUIRE_ORDER, PERMUTE, RETURN_IN_ORDER$/;"	e	enum:__anon3	file:
RETURN_IN_ORDER	getopt.c	/^  REQUIRE_ORDER, PERMUTE, RETURN_IN_ORDER$/;"	e	enum:__anon3	file:
SET_MAKE	Makefile	/^SET_MAKE = $/;"	m
SHELL	Makefile	/^SHELL = \/bin\/sh$/;"	m
SIZEOF_INT	config.h	68;"	d
SIZEOF_LONG	config.h	71;"	d
SIZEOF_SHORT	config.h	74;"	d
SOURCES	Makefile	/^SOURCES = $(fcrackzip_SOURCES) $(zipinfo_SOURCES)$/;"	m
STDC_HEADERS	config.h	77;"	d
STRIP	Makefile	/^STRIP = $/;"	m
TARGET_CPU	crackdef.c	10;"	d	file:
TARGET_CPU	crackdef.c	11;"	d	file:
TARGET_CPU	crackdef.c	23;"	d	file:
TARGET_CPU	crackdef.c	24;"	d	file:
TARGET_CPU	crackdef.c	36;"	d	file:
TARGET_CPU	crackdef.c	37;"	d	file:
TARGET_CPU	crackdef.c	49;"	d	file:
TARGET_CPU	crackdef.c	50;"	d	file:
TARGET_CPU	crackdef.c	62;"	d	file:
TARGET_CPU	crackdef.c	63;"	d	file:
TARGET_CPU	crackdef.c	75;"	d	file:
TARGET_CPU	crackdef.c	76;"	d	file:
TRUE	main.c	/^typedef enum { FALSE = 0, TRUE = 1 } bool;$/;"	e	enum:__anon4	file:
TRUE	zipinfo.c	/^typedef enum { FALSE = 0, TRUE = 1 } bool;$/;"	e	enum:__anon5	file:
UI	cpmask.c	/^typedef unsigned int UI;$/;"	t	file:
USE_GCC_ASM	config.h	80;"	d
USE_GCC_X86_ASM	zipcrack.c	28;"	d	file:
USE_GCC_X86_ASM	zipcrack.c	29;"	d	file:
USE_MULT_TAB	crackdef.c	101;"	d	file:
USE_MULT_TAB	crackdef.c	12;"	d	file:
USE_MULT_TAB	crackdef.c	25;"	d	file:
USE_MULT_TAB	crackdef.c	38;"	d	file:
USE_MULT_TAB	crackdef.c	51;"	d	file:
USE_MULT_TAB	crackdef.c	64;"	d	file:
USE_MULT_TAB	crackdef.c	77;"	d	file:
USE_MULT_TAB	crackdef.c	90;"	d	file:
USE_UNIX_REDIRECTION	config.h	83;"	d
VERSION	Makefile	/^VERSION = 1.0$/;"	m
VERSION	config.h	86;"	d
_	getopt.c	80;"	d	file:
_GETOPT_H	getopt.h	23;"	d
_NO_PROTO	getopt.c	30;"	d	file:
_getopt_initialize	getopt.c	/^_getopt_initialize (optstring)$/;"	f	file:
_getopt_internal	getopt.c	/^_getopt_internal (argc, argv, optstring, longopts, longind, long_only)$/;"	f
ac_ct_CC	Makefile	/^ac_ct_CC = gcc$/;"	m
am__CONFIG_DISTCLEAN_FILES	Makefile	/^am__CONFIG_DISTCLEAN_FILES = config.status config.cache config.log \\$/;"	m
am__cd	Makefile	/^am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd$/;"	m
am__depfiles_maybe	Makefile	/^am__depfiles_maybe = depfiles$/;"	m
am__fastdepCC_FALSE	Makefile	/^am__fastdepCC_FALSE = #$/;"	m
am__fastdepCC_TRUE	Makefile	/^am__fastdepCC_TRUE = $/;"	m
am__include	Makefile	/^am__include = include$/;"	m
am__leading_dot	Makefile	/^am__leading_dot = .$/;"	m
am__quote	Makefile	/^am__quote = $/;"	m
am__remove_distdir	Makefile	/^am__remove_distdir = \\$/;"	m
am_fcrackzip_OBJECTS	Makefile	/^am_fcrackzip_OBJECTS = main.$(OBJEXT) crack.$(OBJEXT)$/;"	m
am_zipinfo_OBJECTS	Makefile	/^am_zipinfo_OBJECTS = zipinfo.$(OBJEXT)$/;"	m
as_func_failure	configure	/^as_func_failure () {$/;"	f
as_func_ret_failure	configure	/^as_func_ret_failure () {$/;"	f
as_func_ret_success	configure	/^as_func_ret_success () {$/;"	f
as_func_success	configure	/^as_func_success () {$/;"	f
benchmark	main.c	/^benchmark (void)$/;"	f	file:
benchmark_count	main.c	/^static int benchmark_count;$/;"	v	file:
benchmark_gen	main.c	/^benchmark_gen (void)$/;"	f	file:
bf_last	crack.c	/^u8 bf_last;$/;"	v
bf_next	crack.c	/^u8 bf_next[256];$/;"	v
binPROGRAMS_INSTALL	Makefile	/^binPROGRAMS_INSTALL = $(INSTALL_PROGRAM)$/;"	m
bin_PROGRAMS	Makefile	/^bin_PROGRAMS = fcrackzip zipinfo$/;"	m
bin_PROGRAMS	Makefile	/^bin_PROGRAMS = fcrackzip$(EXEEXT) zipinfo$(EXEEXT)$/;"	m
bindir	Makefile	/^bindir = ${exec_prefix}\/bin$/;"	m
bool	main.c	/^typedef enum { FALSE = 0, TRUE = 1 } bool;$/;"	t	typeref:enum:__anon4	file:
bool	zipinfo.c	/^typedef enum { FALSE = 0, TRUE = 1 } bool;$/;"	t	typeref:enum:__anon5	file:
brute_force_gen	main.c	/^brute_force_gen (void)$/;"	f	file:
build_alias	Makefile	/^build_alias = $/;"	m
callback_func	crack.h	/^typedef int (*callback_func)(const char *, const char *);$/;"	t
check_unzip	main.c	/^check_unzip (const char *pw)$/;"	f
const	getopt.c	41;"	d	file:
const	getopt1.c	33;"	d	file:
cp_cell	cpmask.c	/^cp_cell;$/;"	t	typeref:struct:__anon1	file:
cp_cells	cpmask.c	/^static UI cp_cells;$/;"	v	file:
cp_cleanup	cpmask.c	/^cp_cleanup (void)$/;"	f	file:
cp_do_mask	cpmask.c	/^cp_do_mask (void)$/;"	f	file:
cp_height	cpmask.c	/^static UI cp_height;$/;"	v	file:
cp_key	cpmask.c	/^static u8 cp_key[] =$/;"	v	file:
cp_set_pw	cpmask.c	/^cp_set_pw (u8 * pw, u8 * pw_end)$/;"	f	file:
cp_table	cpmask.c	/^static int *cp_table;$/;"	v	file:
cp_table_lu1	cpmask.c	/^static cp_table_lu1[MAX_CP_WIDTH];$/;"	v	file:
cp_table_lu2	cpmask.c	/^static cp_table_lu2[MAX_CP_WIDTH];$/;"	v	file:
cp_trans	cpmask.c	/^static cp_cell *cp_trans;$/;"	v	file:
cp_width	cpmask.c	/^static UI cp_width;$/;"	v	file:
crack_cpmask	cpmask.c	/^crack_cpmask (gen_func genfunc, callback_func cbfunc)$/;"	f	file:
crack_method	main.c	/^static method *crack_method = methods;$/;"	v	file:
crack_pw	crack.h	/^  int (*crack_pw)(gen_func, callback_func);$/;"	m	struct:__anon2
crack_pw	crackdef.c	104;"	d	file:
crack_pw	crackdef.c	105;"	d	file:
crack_pw	crackdef.c	15;"	d	file:
crack_pw	crackdef.c	16;"	d	file:
crack_pw	crackdef.c	28;"	d	file:
crack_pw	crackdef.c	29;"	d	file:
crack_pw	crackdef.c	41;"	d	file:
crack_pw	crackdef.c	42;"	d	file:
crack_pw	crackdef.c	54;"	d	file:
crack_pw	crackdef.c	55;"	d	file:
crack_pw	crackdef.c	67;"	d	file:
crack_pw	crackdef.c	68;"	d	file:
crack_pw	crackdef.c	80;"	d	file:
crack_pw	crackdef.c	81;"	d	file:
crack_pw	crackdef.c	93;"	d	file:
crack_pw	crackdef.c	94;"	d	file:
crack_pw	zipcrack.c	/^static int crack_pw (gen_func genfunc, callback_func cbfunc)$/;"	f	file:
crc32	crc32.h	62;"	d
crc_32_tab	crc32.h	/^static const u32 crc_32_tab[] =$/;"	v
datadir	Makefile	/^datadir = ${datarootdir}$/;"	m
datarootdir	Makefile	/^datarootdir = ${prefix}\/share$/;"	m
dc_install_base	Makefile	/^	dc_install_base=`$(am__cd) $(distdir)\/_inst && pwd | sed -e 's,^[^:\\\\\/]:[\\\\\/],\/,'` \\$/;"	m
default_method	crackdef.c	/^int default_method = DEFAULT_METHOD;$/;"	v
depcomp	Makefile	/^depcomp = $(SHELL) $(top_srcdir)\/depcomp$/;"	m
desc	crack.h	/^  char *desc;$/;"	m	struct:__anon2
dict_file	main.c	/^static FILE *dict_file;$/;"	v	file:
dictionary_gen	main.c	/^dictionary_gen (void)$/;"	f	file:
distcleancheck_listfiles	Makefile	/^distcleancheck_listfiles = find . -type f -print$/;"	m
distdir	Makefile	/^distdir = $(PACKAGE)-$(VERSION)$/;"	m
distuninstallcheck_listfiles	Makefile	/^distuninstallcheck_listfiles = find . -type f -print$/;"	m
docdir	Makefile	/^docdir = ${datarootdir}\/doc\/${PACKAGE}$/;"	m
dst_pixel	cpmask.c	52;"	d	file:
dst_x	cpmask.c	/^    UI dst_x, dst_y;$/;"	m	struct:__anon1	file:
dst_y	cpmask.c	/^    UI dst_x, dst_y;$/;"	m	struct:__anon1	file:
dvidir	Makefile	/^dvidir = ${docdir}$/;"	m
exchange	getopt.c	/^exchange (argv)$/;"	f	file:
exec_prefix	Makefile	/^exec_prefix = ${prefix}$/;"	m
false_callback	main.c	/^false_callback (const char *pw, const char *info)$/;"	f	file:
fcrackzip_DEPENDENCIES	Makefile	/^fcrackzip_DEPENDENCIES = $/;"	m
fcrackzip_LDADD	Makefile	/^fcrackzip_LDADD = $/;"	m
fcrackzip_LDFLAGS	Makefile	/^fcrackzip_LDFLAGS =$/;"	m
fcrackzip_OBJECTS	Makefile	/^fcrackzip_OBJECTS = $(am_fcrackzip_OBJECTS)$/;"	m
fcrackzip_SOURCES	Makefile	/^fcrackzip_SOURCES = main.c crack.c crack.h crc32.h$/;"	m
fgetu16	crack.c	/^fgetu16 (FILE * f)$/;"	f	file:
fgetu16	zipinfo.c	/^static u32 fgetu16 (FILE *f)$/;"	f	file:
fgetu32	crack.c	/^fgetu32 (FILE * f)$/;"	f	file:
fgetu32	zipinfo.c	/^static u32 fgetu32 (FILE *f)$/;"	f	file:
file_count	crack.c	/^int file_count;$/;"	v
file_path	crack.c	/^const char *file_path[MAX_FILES];$/;"	v
files	crack.c	/^u8 files[MAX_FILES * HEADER_SIZE];$/;"	v
first_nonopt	getopt.c	/^static int first_nonopt;$/;"	v	file:
flag	getopt.h	/^  int *flag;$/;"	m	struct:option
gen_def	gencrack.pl	/^sub gen_def {$/;"	s
gen_func	crack.h	/^typedef int (*gen_func)(void);$/;"	t
getopt	getopt.c	/^getopt (argc, argv, optstring)$/;"	f
getopt_long	getopt1.c	/^getopt_long (argc, argv, options, long_options, opt_index)$/;"	f
getopt_long_only	getopt1.c	/^getopt_long_only (argc, argv, options, long_options, opt_index)$/;"	f
getpid	getopt.c	77;"	d	file:
gettext	getopt.c	81;"	d	file:
has_arg	getopt.h	/^  int has_arg;$/;"	m	struct:option
host_alias	Makefile	/^host_alias = $/;"	m
htmldir	Makefile	/^htmldir = ${docdir}$/;"	m
image_data	cpmask.c	/^static u8 *image_data;$/;"	v	file:
image_height	cpmask.c	/^static UI image_height;$/;"	v	file:
image_width	cpmask.c	/^static UI image_width;$/;"	v	file:
includedir	Makefile	/^includedir = ${prefix}\/include$/;"	m
index	fcrackzip.html	/^<A NAME="index">&nbsp;<\/A><H2>Index<\/H2>$/;"	a
infodir	Makefile	/^infodir = ${datarootdir}\/info$/;"	m
init_cpmask	cpmask.c	/^init_cpmask (void)$/;"	f	file:
init_crack_pw	crack.h	/^  void (*init_crack_pw)(void);$/;"	m	struct:__anon2
init_crack_pw	crackdef.c	102;"	d	file:
init_crack_pw	crackdef.c	103;"	d	file:
init_crack_pw	crackdef.c	13;"	d	file:
init_crack_pw	crackdef.c	14;"	d	file:
init_crack_pw	crackdef.c	26;"	d	file:
init_crack_pw	crackdef.c	27;"	d	file:
init_crack_pw	crackdef.c	39;"	d	file:
init_crack_pw	crackdef.c	40;"	d	file:
init_crack_pw	crackdef.c	52;"	d	file:
init_crack_pw	crackdef.c	53;"	d	file:
init_crack_pw	crackdef.c	65;"	d	file:
init_crack_pw	crackdef.c	66;"	d	file:
init_crack_pw	crackdef.c	78;"	d	file:
init_crack_pw	crackdef.c	79;"	d	file:
init_crack_pw	crackdef.c	91;"	d	file:
init_crack_pw	crackdef.c	92;"	d	file:
init_crack_pw	zipcrack.c	/^static void init_crack_pw (void)$/;"	f	file:
install_sh	Makefile	/^install_sh = \/home\/maben\/Projects\/c\/fcrackzip-1.0\/install-sh$/;"	m
install_sh_DATA	Makefile	/^install_sh_DATA = $(install_sh) -c -m 644$/;"	m
install_sh_PROGRAM	Makefile	/^install_sh_PROGRAM = $(install_sh) -c$/;"	m
install_sh_SCRIPT	Makefile	/^install_sh_SCRIPT = $(install_sh) -c$/;"	m
last_nonopt	getopt.c	/^static int last_nonopt;$/;"	v	file:
lbAB	fcrackzip.html	/^<A NAME="lbAB">&nbsp;<\/A>$/;"	a
lbAC	fcrackzip.html	/^<A NAME="lbAC">&nbsp;<\/A>$/;"	a
lbAD	fcrackzip.html	/^<A NAME="lbAD">&nbsp;<\/A>$/;"	a
lbAE	fcrackzip.html	/^<A NAME="lbAE">&nbsp;<\/A>$/;"	a
lbAF	fcrackzip.html	/^<A NAME="lbAF">&nbsp;<\/A>$/;"	a
lbAG	fcrackzip.html	/^<A NAME="lbAG">&nbsp;<\/A>$/;"	a
lbAH	fcrackzip.html	/^<A NAME="lbAH">&nbsp;<\/A>$/;"	a
lbAI	fcrackzip.html	/^<A NAME="lbAI">&nbsp;<\/A>$/;"	a
lbAJ	fcrackzip.html	/^<A NAME="lbAJ">&nbsp;<\/A>$/;"	a
lbAK	fcrackzip.html	/^<A NAME="lbAK">&nbsp;<\/A>$/;"	a
lbAL	fcrackzip.html	/^<A NAME="lbAL">&nbsp;<\/A>$/;"	a
lbAM	fcrackzip.html	/^<A NAME="lbAM">&nbsp;<\/A>$/;"	a
lbAN	fcrackzip.html	/^<A NAME="lbAN">&nbsp;<\/A>$/;"	a
libdir	Makefile	/^libdir = ${exec_prefix}\/lib$/;"	m
libexecdir	Makefile	/^libexecdir = ${exec_prefix}\/libexec$/;"	m
load_file	crack.h	/^  void (*load_file)(const char *);$/;"	m	struct:__anon2
load_img	cpmask.c	/^load_img (const char *name)$/;"	f	file:
load_zip	crack.c	/^load_zip (const char *path)$/;"	f	file:
localedir	Makefile	/^localedir = ${datarootdir}\/locale$/;"	m
localstatedir	Makefile	/^localstatedir = ${prefix}\/var$/;"	m
main	getopt.c	/^main (argc, argv)$/;"	f
main	getopt1.c	/^main (argc, argv)$/;"	f
main	main.c	/^main (int argc, char *argv[])$/;"	f
main	zipinfo.c	/^int main (int argc, char *argv[])$/;"	f
man1dir	Makefile	/^man1dir = $(mandir)\/man1$/;"	m
man_MANS	Makefile	/^man_MANS = fcrackzip.1$/;"	m
mandir	Makefile	/^mandir = ${datarootdir}\/man$/;"	m
max_length	main.c	/^static int max_length = -1;$/;"	v	file:
method	crack.h	/^} method;$/;"	t	typeref:struct:__anon2
method_number	main.c	/^static int method_number = -1;$/;"	v	file:
methods	crackdef.c	/^method methods[] = {$/;"	v
min_length	main.c	/^static int min_length = -1;$/;"	v	file:
mirror	cpmask.c	/^    int mirror;$/;"	m	struct:__anon1	file:
mkinstalldirs	Makefile	/^mkinstalldirs = $(SHELL) $(top_srcdir)\/mkinstalldirs$/;"	m
modul	main.c	/^static int modul = 1;$/;"	v	file:
mult_tab	crack.c	/^static u8 mult_tab[16384];$/;"	v	file:
my_index	getopt.c	/^my_index (str, chr)$/;"	f	file:
my_index	getopt.c	185;"	d	file:
name	getopt.h	/^  const char *name;$/;"	m	struct:option
nextchar	getopt.c	/^static char *nextchar;$/;"	v	file:
no_argument	getopt.h	97;"	d
noinst_HEADERS	Makefile	/^noinst_HEADERS = getopt.h$/;"	m
nonoption_flags	getopt.c	/^static const char *nonoption_flags;$/;"	v	file:
nonoption_flags_len	getopt.c	/^static int nonoption_flags_len;$/;"	v	file:
oldincludedir	Makefile	/^oldincludedir = \/usr\/include$/;"	m
optarg	getopt.c	/^char *optarg = NULL;$/;"	v
opterr	getopt.c	/^int opterr = 1;$/;"	v
optind	getopt.c	/^int optind = 0;$/;"	v
option	getopt.h	/^struct option$/;"	s
optional_argument	getopt.h	99;"	d
options	main.c	/^static struct option options[] =$/;"	v	typeref:struct:option	file:
options	zipinfo.c	/^static struct option options[] = {$/;"	v	typeref:struct:option	file:
optopt	getopt.c	/^int optopt = '?';$/;"	v
ordering	getopt.c	/^} ordering;$/;"	v	typeref:enum:__anon3	file:
parse_charset	main.c	/^parse_charset (char *cs)$/;"	f	file:
parse_zip	zipinfo.c	/^static void parse_zip (char *path)$/;"	f	file:
pdfdir	Makefile	/^pdfdir = ${docdir}$/;"	m
pkgdatadir	Makefile	/^pkgdatadir = $(datadir)\/fcrackzip$/;"	m
pkgincludedir	Makefile	/^pkgincludedir = $(includedir)\/fcrackzip$/;"	m
pkglibdir	Makefile	/^pkglibdir = $(libdir)\/fcrackzip$/;"	m
posixly_correct	getopt.c	/^static char *posixly_correct;$/;"	v	file:
prefix	Makefile	/^prefix = \/usr\/local$/;"	m
print_callback	main.c	/^print_callback (const char *pw, const char *info)$/;"	f	file:
program_transform_name	Makefile	/^program_transform_name = s,x,x,$/;"	m
prototypes	configure	/^   function prototypes and stuff, but not '\\xHH' hex character constants.$/;"	f
psdir	Makefile	/^psdir = ${docdir}$/;"	m
pw	crack.c	/^u8 pw[MAX_PW + 1] = "aaaaaa";$/;"	v
pw_end	crack.c	/^u8 *pw_end;			\/* must point to the trailing zero byte.  *\/$/;"	v
required_argument	getopt.h	98;"	d
residuent	main.c	/^static int residuent = 0;$/;"	v	file:
sbindir	Makefile	/^sbindir = ${exec_prefix}\/sbin$/;"	m
sharedstatedir	Makefile	/^sharedstatedir = ${prefix}\/com$/;"	m
src_pixel	cpmask.c	51;"	d	file:
srcdir	Makefile	/^srcdir = .$/;"	m
subdir	Makefile	/^subdir = .$/;"	m
sysconfdir	Makefile	/^sysconfdir = ${prefix}\/etc$/;"	m
target_alias	Makefile	/^target_alias = $/;"	m
top_builddir	Makefile	/^top_builddir = .$/;"	m
top_distdir	Makefile	/^top_distdir = .$/;"	m
top_srcdir	Makefile	/^top_srcdir = .$/;"	m
transform	Makefile	/^transform = $(program_transform_name)$/;"	m
transform_data	cpmask.c	/^static u8 *transform_data;$/;"	v	file:
transform_height	cpmask.c	/^static UI transform_height;$/;"	v	file:
transform_width	cpmask.c	/^static UI transform_width;$/;"	v	file:
true_callback	main.c	/^true_callback (const char *pw, const char *info)$/;"	f	file:
u16	config.h	/^typedef unsigned int u16;$/;"	t
u16	config.h	/^typedef unsigned short u16;$/;"	t
u32	config.h	/^typedef unsigned int u32;$/;"	t
u32	config.h	/^typedef unsigned long u32;$/;"	t
u8	config.h	/^typedef unsigned char u8;$/;"	t
usage	main.c	/^usage (int ec)$/;"	f	file:
usage	zipinfo.c	/^static void usage (int ec)$/;"	f	file:
use_unzip	main.c	/^int use_unzip;$/;"	v
val	getopt.h	/^  int val;$/;"	m	struct:option
validate	main.c	/^validate (void)$/;"	f	file:
validate_gen	main.c	/^validate_gen (void)$/;"	f	file:
verbosity	crack.c	/^int verbosity;$/;"	v
zipinfo_DEPENDENCIES	Makefile	/^zipinfo_DEPENDENCIES = $/;"	m
zipinfo_LDADD	Makefile	/^zipinfo_LDADD = $/;"	m
zipinfo_LDFLAGS	Makefile	/^zipinfo_LDFLAGS =$/;"	m
zipinfo_OBJECTS	Makefile	/^zipinfo_OBJECTS = $(am_zipinfo_OBJECTS)$/;"	m
zipinfo_SOURCES	Makefile	/^zipinfo_SOURCES = zipinfo.c$/;"	m
